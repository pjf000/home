<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>home</groupId>
  <artifactId>home</artifactId>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>home-web</module>
    <module>home-data</module>
    <module>home-server</module>
    <module>home-api</module>
  </modules>
  <packaging>pom</packaging>

  <name>home</name>
  <url>http://maven.apache.org</url>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>

    <java.version>1.7</java.version>
    <spring.version>4.2.5.RELEASE</spring.version>
    <slf4j.version>1.7.21</slf4j.version>
    <jackson.version>1.9.13</jackson.version>
    <dom4j.version>1.6.1</dom4j.version>
    <log4j.version>1.2.17</log4j.version>
    <logback.version>1.1.7</logback.version>
    <netty.version>4.0.33.Final</netty.version>
    <gson.version>2.7</gson.version>
    <fastjson.version>1.2.15</fastjson.version>
    <mybatis.spring.version>1.2.5</mybatis.spring.version>
    <mybatis.version>3.3.1</mybatis.version>
    <alibaba.druid.version>1.0.25</alibaba.druid.version>
    <mysql.version>5.1.39</mysql.version>
    <jedis.version>2.8.1</jedis.version>
    <sdr.version>1.7.2.RELEASE</sdr.version>
    <lombok.version>1.16.10</lombok.version>
    <tk.mybatis.version>3.3.8</tk.mybatis.version>
    <spring-boot.version>1.3.6.RELEASE</spring-boot.version>
    <dangdang.elastic-job.version>1.1.0</dangdang.elastic-job.version>
    <zookeeper.version>3.4.6</zookeeper.version>
    <apache.curator.version>2.8.0</apache.curator.version>
    <mongodb.version>1.9.2.RELEASE</mongodb.version>
    <spring-data-common.version>1.12.2.RELEASE</spring-data-common.version>
    <dubbo.version>2.8.21</dubbo.version>

    <!--插件 plugin all version -->
    <maven-compiler-plugin.version>3.3</maven-compiler-plugin.version>
    <maven-resources-plugin.version>2.7</maven-resources-plugin.version>
    <maven-jar-plugin.version>2.6</maven-jar-plugin.version>
    <maven-site-plugin.version>3.4</maven-site-plugin.version>
    <project.build.locale>zh_CN</project.build.locale>
    <lifecycle-mapping.version>1.0.0</lifecycle-mapping.version>
    <maven-plugin-plugin.version>3.4</maven-plugin-plugin.version>
    <maven-source-plugin.version>2.4</maven-source-plugin.version>

    <com.alibaba.druid.version>1.0.25</com.alibaba.druid.version>
  </properties>
  <!-- 第三方仓库地址start -->
  <repositories>
    <repository>
      <id>aliyun</id>
      <name>aliyun nexus Repository</name>
      <url>http://maven.aliyun.com/nexus/content/groups/public/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>public</id>
      <name>Public Repositories</name>
      <url>http://nexus/content/groups/public/</url>
      <releases>
        <enabled>true</enabled>
      </releases>
      <snapshots>
        <enabled>true</enabled>
      </snapshots>
    </repository>
    <repository>
      <id>spring-milestones</id>
      <name>Spring Milestones</name>
      <url>http://repo.spring.io/milestone</url>
      <snapshots>
        <enabled>false</enabled>
      </snapshots>
    </repository>
  </repositories>
  <!-- 第三方仓库地址 end-->



  <dependencies>
    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>3.8.1</version>
      <scope>test</scope>
    </dependency>
  </dependencies>

  <!-- 子模块加入jar包的时的默认版-->
  <dependencyManagement>
    <dependencies>
      <dependency>
        <groupId>org.springframework.boot</groupId>
        <artifactId>spring-boot-dependencies</artifactId>
        <version>${spring-boot.version}</version>
        <type>pom</type>
        <scope>import</scope>
      </dependency>

      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>dubbo</artifactId>
        <version>${dubbo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>dubbo</artifactId>
        <version>${dubbo.version}</version>
      </dependency>
      <dependency>
        <groupId>com.github.letcheng</groupId>
        <artifactId>Extractor</artifactId>
        <version>1.2</version>
      </dependency>
      <!-- https://mvnrepository.com/artifact/org.springframework/spring-jms -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jms</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- spring -->
      <dependency>
        <!-- core utilitises uesed by other modules .defined use spring utility
            APIs(org.springframework) -->
        <groupId>org.springframework</groupId>
        <artifactId>spring-core</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Expression language(depends on spring-core)define this if you use
          spring Expression APIs(org.springframework.expression.*) -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-expression</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- bean Factory and javaBean utilities(depends on spring-core) define
          this if you use spring beans APIs -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-beans</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Aspect oriented programming(AOP) framework(depends on spring-core
          ,spring-bean)define this if you use spring AOP APIs(org.springframework.aop.*) -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-aop</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- APplication Context(depends on spring-core,spring-Expression,spring-aop)
          this is central for artifact for spring Dependency Injection Container and
          is generally always defined -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- Transaction management abstraction(depends on spring-core,spring-beans,spring-context,spring-context)
          define this if you use spring Transaction or DAO Expression Hierarchy(org.springframework.transaction.*/org.springframework..DAO.*)) -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-tx</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-context-support</artifactId>
        <version>${spring.version}</version>
      </dependency>

      <!-- JDBC DATA access library(depends on spring-core ,spring-beans spring-context,spring-tx)
          define this if you use spring's JDBCTemplate API(org.springframework.JDBC.*) -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-jdbc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Object-Relation-Mapping(ORM) integration with Hibernate and iBatis(depends
          on spring-core,spring-beans,spring-context, spring-tx) define this if you
          need use ORM(org.springframework.ORM.*) -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-orm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Object-XML-Mapping(OXM)abstraction and integration with JAXB ,JiXB,Caster,XStream,
          and XML Beans(depends on spring-core,spring-beans,spring-context)define this
          if you use OXM(org.springframework.oxm.*) -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-oxm</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Web application development utilities applicable to Servlet and portlet
          environment(depends on spring-core,spring-beans,spring-context) define this
          if you use springMVC or wish to use Structs JSF,or another web framework
          with Spring(org.springframework.web.*) -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-web</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- SpringMVC for Servlet environment(depends spring-core,spring-beans,spring-context
          define this if you use springMVC with a Servlet container such as Apache
          Tomcat(org.springframework.web.Servlet.*) -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- springMVC for portlet environment(depends on spring-core,spring-beans,spring-context,spring-web)
          define this if you use springMVC with a portlet Container(org.springframework.web.portlet.*) -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-webmvc-portlet</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- Support on testing spring application with tools such as Junit and
          testNG this artifact is generally always define with a "test" scope for the
          integration test framework and unit test stubs -->
      <dependency>
        <groupId>org.springframework</groupId>
        <artifactId>spring-test</artifactId>
        <version>${spring.version}</version>
      </dependency>
      <!-- spring -->



      <dependency>
        <groupId>dom4j</groupId>
        <artifactId>dom4j</artifactId>
        <version>${dom4j.version}</version>
      </dependency>

      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>fastjson</artifactId>
        <version>${fastjson.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis-spring</artifactId>
        <version>${mybatis.spring.version}</version>
      </dependency>

      <dependency>
        <groupId>org.mybatis</groupId>
        <artifactId>mybatis</artifactId>
        <version>${mybatis.version}</version>
      </dependency>

      <dependency>
        <groupId>tk.mybatis</groupId>
        <artifactId>mapper</artifactId>
        <version>${tk.mybatis.version}</version>
      </dependency>

      <dependency>
        <groupId>com.alibaba</groupId>
        <artifactId>druid</artifactId>
        <version>${alibaba.druid.version}</version>
      </dependency>

      <dependency>
        <groupId>mysql</groupId>
        <artifactId>mysql-connector-java</artifactId>
        <version>${mysql.version}</version>
      </dependency>

      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>4.12</version>
      </dependency>



      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-api</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>${slf4j.version}</version>
      </dependency>

      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>

      <dependency>
        <groupId>redis.clients</groupId>
        <artifactId>jedis</artifactId>
        <version>${jedis.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-redis</artifactId>
        <version>${sdr.version}</version>
      </dependency>

      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>

      <dependency>
        <groupId>com.dangdang</groupId>
        <artifactId>elastic-job-core</artifactId>
        <version>${dangdang.elastic-job.version}</version>
      </dependency>

      <dependency>
        <groupId>com.dangdang</groupId>
        <artifactId>elastic-job-spring</artifactId>
        <version>${dangdang.elastic-job.version}</version>
      </dependency>

      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-framework</artifactId>
        <version>${apache.curator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.curator</groupId>
        <artifactId>curator-recipes</artifactId>
        <version>${apache.curator.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-mongodb</artifactId>
        <version>${mongodb.version}</version>
      </dependency>

      <dependency>
        <groupId>org.springframework.data</groupId>
        <artifactId>spring-data-commons</artifactId>
        <version>${spring-data-common.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-core</artifactId>
        <version>${logback.version}</version>
      </dependency>

      <dependency>
        <groupId>ch.qos.logback</groupId>
        <artifactId>logback-classic</artifactId>
        <version>${logback.version}</version>
      </dependency>

    </dependencies>
  </dependencyManagement>
</project>
